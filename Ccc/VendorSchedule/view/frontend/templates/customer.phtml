<?php /** * Copyright Â© 2013-2017 Magento, Inc. All rights reserved. * See COPYING.txt for license details. */ ?> 
<?php
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$customerSession = $objectManager->get('Magento\Customer\Model\Session');
$login = $customerSession->isLoggedIn();
if($login){
    $customerId = $customerSession->getCustomer()->getId();
    $customerName = $customerSession->getCustomer()->getName();
}else{
    $customerId = "";
    $customerName = "";
}
$block = $objectManager->get('Ccc\VendorSchedule\Block\Post');
$messageCollection = $block->getCollection();
$url = $this->getBackUrl();

$schedule_message = $this->getRequest()->getParam('schedule-message');
?>

<style>
            #calendar{
                height: 300px;
                width: 400px;
                position:absolute;
            }
            #calendar td{
                cursor: pointer;
            }
            .calendar_table{
                text-align: center;
                width: 100%;
                display: table;
                margin: 0 auto;
            }
            
            #row_year{
        width: 100%;
        text-align: center;
        color: #ff9b2c;
        font-weight: 900;
    }
    #year_p{
        float: left;
        flex: 1;
        margin-left: 10px;
    }
    #year_n{
        float: right;
        flex: 1;
        margin-right: 10px;
    }
    
    #year_title{
        flex: 6;
        text-align: center;
        margin-bottom: 0;
    }

    #row_month{
        width: 100%;
        text-align: center;
        color: #ff9b2c;
        font-weight: 900;
    }

    #month_p{
        float: left;
        flex: 1;
        margin-left: 10px;
    }
    #month_n{
        float: right;
        flex: 1;
        margin-right: 10px;
    }
    #month_title{
        flex: 6;
        text-align: center;
        margin-bottom: 0;
    }

    #day_title_row{
        width: 100%;
        display: flex;
        color: #44a1f3;
        font-weight: 600;
    }
    #day_title_row td{
        flex: 1;
        text-align: center;
    }

    .day_row{
        width: 100%;
        padding-left: 10px;
        padding-right: 10px;
        height: 40px;
    }
    
    .day_row_cell > a{
        color: #44a1f3;
    }
    .day_row td{
        width: 100px;
        padding-left: 5px;
        padding-right: 5px;
    }
            #calendar_table_days{
                width: 100%;
                text-align: center;
                display: table;
                margin: 0 auto;
            }
            
            #day_detail{
                width: 450px;
                height: 340px;
                margin-left: 420px;
                overflow: scroll;
            }
            
            #calendar_info{
                width: 850px;
                margin:0 auto;
                
            }
            
            .message_title{
                width: 100px;
            }
            
            body > .page-wrapper > #maincontent{
                min-height: 1200px;
            }
            
            .panel-default > .panel-heading{
                background-color: #f4f4f4;
            }
            
            #calendar_form{
                background-color: #f4f4f4;
            }
            
            #appointment_booked_list{
                background-color: white;
            }
            
            #appointment_unread_list{
                background-color: white;
            }
            
            #booked_appointment > tr > td{
	        padding: 5px;
	    }
	    
	    #booked_appointment > th{
	        text-align: center;
	    }
	    
	    #unread_appointment > tr > td{
	        padding: 5px;
	    }
	    
	    #unread_appointment > th{
	        text-align: center;
	    }
	    
	    #schedule-message{
	        position: relative;
	        display: none;
	    }
	    
	    .message-close{
	        position: absolute;
	        top: 0;
	        right: 0;
	    }
	    
	    .show#schedule-message{
	    	display: block !important;
	    }
	    
	    .success{
	    	background-color: #d0f7ce;
    		color: #5abb57;
	    }
	    
	    .error{
	    	background-color: #f7cecf;
    		color: #e43a40;
	    }
	    
	    .schedule-message{
	    	padding: 5px;
	    }
            
            @media only screen 
	    and (max-device-width: 480px) {
	        .panel.panel-default{
	            width: 100%;
	        }
	        
	        #calendar{
	            position: initial;
	            width: 100%;
	            height: auto;
	        }
	        
	        #day_detail{
	            margin-left: 0;
	            width: 100%;
	        }
	        
	        #calendar_info{
	            width: auto;
	        }
	        
	        .page-footer{
	            margin-top: 0px;
	        }
	        
	        #viewed-vendor-table{
	            width: auto;
	        }
	        
	        #appointment_address{
	            width: 100% !important;
	        }
	        
	        #appointment_content{
	            width: 100%;
	        }
	    }
        </style>
        <div id="test"></div>
        <?php echo $this->getChildHtml("unread_appointment_message"); ?>
    <?php echo $this->getChildHtml("booked_appointment"); ?>
<div class="panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-shopping-cart fa-fw"></i>
        <?php echo __('Schedule'); ?>
    </div>
    
    <form id="calendar_form" method="post" onsubmit="return validate();">
    
    <div id="calendar_info">
        <div id="calendar"></div>
        <div id="day_detail"></div>
        <div id="calendar_message">
        <div id = "schedule-message" class="">
	    <p class="schedule-message" id = "schedule-message-content"></p><span class="message-close" onclick="closeMessage()">&#10006;</span>
	</div>
            <input id="appointment_address" hidden >
        </div>
        <script>
        var year;
        var month;
        var day;
        var week;
        
        var VendorUnreadCollection;
        var CustomerUnreadCollection;
        var BookedCollection;
        var DeclinedCollection;
        var CancelledCollection;
        var FinishedCollection;
        
        var VendorUnreadCollectionTime;
        var CustomerUnreadCollectionTime;
        var BookedCollectionTime;
        var DeclinedCollectionTime;
        var CancelledCollectionTime;
        var FinishedCollectionTime;
        
        var VendorUnreadCollectionId;
        var CustomerUnreadCollectionId;
        var BookedCollectionId;
        var DeclinedCollectionId;
        var CancelledCollectionId;
        var FinishedCollectionId;
        
        var VendorUnreadCollectionVendorName;
        var CustomerUnreadCollectionVendorName;
        var BookedCollectionVendorName;
        var DeclinedCollectionVendorName;
        var CancelledCollectionVendorName;
        var FinishedCollectionVendorName;
        
        var VendorUnreadCollectionVendorId;
        var CustomerUnreadCollectionVendorId;
        var BookedCollectionVendorId;
        var DeclinedCollectionVendorId;
        var CancelledCollectionVendorId;
        var FinishedCollectionVendorId;
        
        var VendorUnreadCollectionAddress;
        var CustomerUnreadCollectionAddress;
        var BookedCollectionAddress;
        var DeclinedCollectionAddress;
        var CancelledCollectionAddress;
        var FinishedCollectionAddress;
        
        var VendorUnreadCollectionContent;
        var CustomerUnreadCollectionContent;
        var BookedCollectionContent;
        var DeclinedCollectionContent;
        var CancelledCollectionContent;
        var FinishedCollectionContent;
        
        function getCollectionInfo(){
            VendorUnreadCollection = new Array();
            CustomerUnreadCollection = new Array();
            BookedCollection = new Array();
            DeclinedCollection = new Array();
            CancelledCollection = new Array();
            FinishedCollection = new Array();

            VendorUnreadCollectionTime = new Array();
            CustomerUnreadCollectionTime = new Array();
            BookedCollectionTime = new Array();
            DeclinedCollectionTime = new Array();
            CancelledCollectionTime = new Array();
            FinishedCollectionTime = new Array();
            
            VendorUnreadCollectionId = new Array();
            CustomerUnreadCollectionId = new Array();
            BookedCollectionId = new Array();
            DeclinedCollectionId = new Array();
            CancelledCollectionId = new Array();
            FinishedCollectionId = new Array();
            
            VendorUnreadCollectionVendorName = new Array();
            CustomerUnreadCollectionVendorName = new Array();
            BookedCollectionVendorName = new Array();
            DeclinedCollectionVendorName = new Array();
            CancelledCollectionVendorName = new Array();
            FinishedCollectionVendorName = new Array();
            
            VendorUnreadCollectionVendorId = new Array();
            CustomerUnreadCollectionVendorId = new Array();
            BookedCollectionVendorId = new Array();
            DeclinedCollectionVendorId = new Array();
            CancelledCollectionVendorId = new Array();
            FinishedCollectionVendorId = new Array();
            
            VendorUnreadCollectionAddress = new Array();
            CustomerUnreadCollectionAddress = new Array();
            BookedCollectionAddress = new Array();
            DeclinedCollectionAddress = new Array();
            CancelledCollectionAddress = new Array();
            FinishedCollectionAddress = new Array();
            
            VendorUnreadCollectionContent = new Array();
            CustomerUnreadCollectionContent = new Array();
            BookedCollectionContent = new Array();
            DeclinedCollectionContent = new Array();
            CancelledCollectionContent = new Array();
            FinishedCollectionContent = new Array();
            
            <?php 
            if (is_array($messageCollection) || is_object($messageCollection)):
            foreach($messageCollection as $CollectionItem):?>
                var x = "<?php echo $CollectionItem->getData('status'); ?>";
                switch(x){
                    case "vendor unread":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            VendorUnreadCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            VendorUnreadCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            VendorUnreadCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            VendorUnreadCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            VendorUnreadCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            VendorUnreadCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            VendorUnreadCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                    case "customer unread":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            CustomerUnreadCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            CustomerUnreadCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            CustomerUnreadCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            CustomerUnreadCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            CustomerUnreadCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            CustomerUnreadCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            CustomerUnreadCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                    case "booked":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            BookedCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            BookedCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            BookedCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            BookedCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            BookedCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            BookedCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            BookedCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                    case "declined":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            DeclinedCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            DeclinedCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            DeclinedCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            DeclinedCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            DeclinedCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            DeclinedCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            DeclinedCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                    case "cancelled":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            CancelledCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            CancelledCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            CancelledCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            CancelledCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            CancelledCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            CancelledCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            CancelledCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                    case "finished":
                        if("<?php echo $customerId; ?>" == "<?php echo $CollectionItem->getData('customer_id'); ?>"){
                            FinishedCollection.push("<?php echo $CollectionItem->getDate(); ?>");
                            FinishedCollectionTime.push("<?php echo $CollectionItem->getTime(); ?>");
                            FinishedCollectionId.push("<?php echo $CollectionItem->getId(); ?>");
                            FinishedCollectionVendorId.push("<?php echo $CollectionItem->getVendorId(); ?>");
                            FinishedCollectionAddress.push("<?php echo $CollectionItem->getAddress(); ?>");
                            FinishedCollectionContent.push("<?php echo $CollectionItem->getContent(); ?>");
                            FinishedCollectionVendorName.push("<?php echo $CollectionItem->getVendorName(); ?>");
                        }
                        break;
                }
            <?php endforeach; ?>
        <?php endif;?>
        }

        function getCurrentDay(){
            var today = new Date();
            day = today.getDate();
            month = today.getMonth()+1;
            year = today.getFullYear();
            week = today.getDay();
        }

        function getWeekOfDay(){
            var title;
            week = new Date(year, month - 1, day).getDay();
            switch(week){
                case 1: title = "Monday";
                    break;
                case 2: title = "Tuesday";
                    break;
                case 3: title = "Wednesday";
                    break;
                case 4: title = "Thursday";
                    break;
                case 5: title = "Friday";
                    break;
                case 6: title = "Saturday";
                    break;
                case 0: title = "Sunday";
                    break;
            }
            return title;
        }

        function getMonthDays(month){
            switch(month){
                case 1:
                case 3:
                case 5:
                case 7:
                case 8:
                case 10:
                case 12:
                    return 31;
                case 4:
                case 6:
                case 9:
                case 11:
                    return 30;
                case 2:
                    if(year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)){
                        return 29;
                    }else{
                        return 28;
                    }
            }
        }

        function getMonthName(month){
            switch(month){
                case 1: return "January";
                case 2: return "February";
                case 3: return "March";
                case 4: return "April";
                case 5: return "May";
                case 6: return "June";
                case 7: return "July";
                case 8: return "August";
                case 9: return "September";
                case 10: return "October";
                case 11: return "November";
                case 12: return "December";
            }
        }

        function createCalendarHeader(){
            var head_row = document.createElement("TR");
            head_row.id = "calendar_table_head_row";
            var table_head = document.createElement("TH");
            table_head.id = "calendar_table_head";
            table_head.innerHTML = "Calendar";
            table_head.style.align = "center";
            head_row.appendChild(table_head);
            return head_row;
        }

        function createYearRow(year){
            var row_year = document.createElement("TR");
            row_year.id = "row_year";
            var th1 = document.createElement("TD");
            var th2 = document.createElement("TD");
            var th3 = document.createElement("TD");
            var year_p = document.createElement("TD");
            year_p.id = "year_p";
            year_p.innerHTML = "<<";
            year_p.onclick = function(){yearChange(-1);};
            var year_n = document.createElement("TD");
            year_n.id = "year_n";
            year_n.innerHTML = ">>";
            year_n.onclick = function(){yearChange(1);};
            var year_title = document.createElement("P");
            year_title.id = "year_title";
            year_title.innerHTML = year;
            th1.appendChild(year_p);
            th2.appendChild(year_title);
            th3.appendChild(year_n);
            row_year.appendChild(th1);
            row_year.appendChild(th2);
            row_year.appendChild(th3);
            return row_year;
        }

        function createMonthRow(month){
            var row_month = document.createElement("TR");
            row_month.id = "row_month";
            var m1 = document.createElement("TD");
            var m2 = document.createElement("TD");
            var m3 = document.createElement("TD");
            var month_p = document.createElement("TD");
            month_p.id = "month_p";
            month_p.innerHTML = "<<";
            month_p.onclick = function(){monthChange(-1);};
            var month_n = document.createElement("TD");
            month_n.id = "month_n";
            month_n.innerHTML = ">>";
            month_n.onclick = function(){monthChange(1);};
            var month_title = document.createElement("P");
            month_title.id = "month_title";
            month_title.innerHTML = getMonthName(month);
            m1.appendChild(month_p);
            m2.appendChild(month_title);
            m3.appendChild(month_n);
            row_month.appendChild(m1);
            row_month.appendChild(m2);
            row_month.appendChild(m3);
            return row_month;
        }

        function createDayTitle(){
            var day_title = document.createElement("TR"); 
            day_title.id = "day_title_row";
            for(var i = 1; i <= 7; i++){
                var title;
                switch(i){
                    case 2: title = "M";
                        break;
                    case 3: title = "T";
                        break;
                    case 4: title = "W";
                        break;
                    case 5: title = "T";
                        break;
                    case 6: title = "F";
                        break;
                    case 7: title = "S";
                        break;
                    case 1: title = "S";
                        break;
                }
                var t = document.createElement("TD");
                t.innerHTML = title;
                day_title.appendChild(t);
            }
            return day_title;
        }

        function createWeek(days){
            var week = document.createElement("TR"); 
            week.className = "day_row";
            for(var i = 0; i < days.length; i++){
                var j = days[i];
                var t = document.createElement("TD");

                if(j === 100){
                    t.innerHTML = "_";
                }else{
                    var a = document.createElement("A");
                    a.innerText = j.toString();
                    if(checkDayBooked(j +"/" + month + "/" + year)){
                        a.style.borderBottom = "2px solid #e43a40";
                    }
                    //t.innerHTML = j.toString();
                    t.className = "day_row_cell";
                    t.appendChild(a);
                    t.id = j;
                    var today = new Date();
                    t.onclick = function(){
                        day = this.id;
                        if(year > today.getFullYear() || (year === today.getFullYear() && month > today.getMonth() + 1) 
                            || (year === today.getFullYear() && month === today.getMonth() + 1 && day >= today.getDate())){
                            this.style.backgroundColor = "lightgrey";
                        }
                        resetCalendar();
                    };
                }
                if(j === day){
                    t.style.backgroundColor = "lightgrey";
                }
                week.appendChild(t);
            }
            return week;
        }

        function createDays(days){
            var days_blank = new Date(year, month - 1, 1).getDay();
            //document.getElementById("test").innerHTML = days_blank;
            var table_days = document.createElement("TABLE");
            table_days.id = "calendar_table_days";
            for(var i = 1; i <= days;){
                var k = [];
                for(var j = 0; j < 7; j++){
                    if(days_blank !== 7 && i === 1){
                        for(var n = days_blank; n > 0; n--){
                            k.push(100);
                        }
                        j += days_blank;
                        k.push(i);
                    }else{
                        if(i <= days){
                            k.push(i);
                        }
                    }
                    i++;
                }
                table_days.appendChild(createWeek(k));
            }
            return table_days;
        }

        function yearChange(change){
            year += change;
            resetCalendar();
        }

        function monthChange(change){

            month += change;
            if(month <= 0){
                month += 12;
                year -= 1;
            }else if(month > 12){
                month -= 12;
                year += 1;
            }
            resetCalendar();
        }

        function setBackgroundColor(){
            var background_color;
            switch(month){
                case 1: 
                    background_color = "yellow";
                    break;
                case 2: 
                    background_color = "orange";
                    break;
                case 3: 
                    background_color = "red";
                    break;
                case 4: 
                    background_color = "gold";
                    break;
                case 5: 
                    background_color = "goldenrod";
                    break;
                case 6: 
                    background_color = "darkgoldenrod";
                    break;
                case 7: 
                    background_color = "paleturquoise";
                    break;
                case 8: 
                    background_color = "lightblue";
                    break;
                case 9: 
                    background_color = "lightskyblue";
                    break;
                case 10: 
                    background_color = "lightgreen";
                    break;
                case 11: 
                    background_color = "aquamarine";
                    break;
                case 12: 
                    background_color = "yellowgreen";
                    break;
            }
            background_color = "#ff9b2c";
            //document.getElementById("row_year").style.backgroundColor = background_color;
            //document.getElementById("row_month").style.backgroundColor = background_color;
            //document.getElementById("current_day").style.backgroundColor = background_color;
            var tables = document.getElementsByTagName("calendar_table");
            for(var i = 0; i < tables.length; i++){
                tables[i].style.borderColorr = background_color;
            }
        //document.getElementById("day_detail_info_head").style.backgroundColor = background_color;
        var days = document.getElementsByClassName("day_row_cell");
        days[day - 1].style.backgroundColor = "lightgrey";
    }

    function createDayDetail(){
        var table = document.createElement("TABLE");
        table.id = "day_detail_info";
        var head = document.createElement("TH");
        table.id = "day_detail_info_head";
        var head_row = document.createElement("TR");
        var head_row_cell = document.createElement("TD");
        head_row_cell.innerHTML = day + "/" + month + "/" + year + "  " + getWeekOfDay();
        head_row_cell.style.cssText = "width: 600px; text-align: center;";
        head_row.appendChild(head_row_cell);
        head.appendChild(head_row);
        table.appendChild(head);
        for(var i = 8; i <= 20; i++){
            var info_row = document.createElement("TR");
            var time_cell = document.createElement("TD");
            time_cell.style.cssText = "width: 100px; text-align: center; background-color: white;";
            
            var availability = document.createElement("TD");
            availability.id = i + "_" + day + "_" + month + "_" + year;
            availability.style.cssText = "width: 550px; text-align: center; background-color: white;";
            
            var detail = document.createElement("TR");
            var cellArray = createAppointmentDetailRow(i);
            for(var j = 0; j < cellArray.length; j++){
                cellArray[j].onclick = function(){
                    var info = getAppointmentAreaDetail(this.className, this.id);
                    createAppiontmentArea(info[0],info[1],info[2],info[3],info[4],info[5].replace(/<br\s*\/?>/mg, "\n"), this.className);
                };
                detail.appendChild(cellArray[j]);
                if(j < cellArray.length - 1){
                    var separator = document.createElement("A");
                    separator.innerHTML = " | ";
                    detail.appendChild(separator);
                } 
            }
            
            time_cell.innerHTML = i + ":00";
            availability.appendChild(detail);
            info_row.appendChild(time_cell);
            info_row.appendChild(availability);
            table.appendChild(info_row);
        }
        document.getElementById("day_detail").append(table);
    }
    
    function checkDayBooked(date){
        for(var i = 0; i < VendorUnreadCollection.length; i++){
            if(date == VendorUnreadCollection[i]){
                return true;
            }
        }
        for(var i = 0; i < VendorUnreadCollection.length; i++){
            if(date == VendorUnreadCollection[i]){
                return true;
            }
        }
        for(var i = 0; i < CustomerUnreadCollection.length; i++){
            if(date == CustomerUnreadCollection[i]){
                return true;
            }
        }
        for(var i = 0; i < BookedCollection.length; i++){
            if(date == BookedCollection[i]){
                return true;
            }
        }
        for(var i = 0; i < BookedCollection.length; i++){
            if(date == BookedCollection[i]){
                return true;
            }
        }
        for(var i = 0; i < BookedCollection.length; i++){
            if(date == BookedCollection[i]){
                return true;
            }
        }
        return false;
    }
    
    function getAppointmentAreaDetail(status, id){
        getCollectionInfo();
        var info = [];
        switch(status){
            case "vendor_unread":
                info.push(VendorUnreadCollectionId[id]);
                info.push(VendorUnreadCollectionVendorName[id]);
                info.push(VendorUnreadCollection[id]);
                info.push(VendorUnreadCollectionTime[id]);
                info.push(VendorUnreadCollectionAddress[id]);
                info.push(VendorUnreadCollectionContent[id]);
                break;
            case "customer_unread":
                info.push(CustomerUnreadCollectionId[id]);
                info.push(CustomerUnreadCollectionVendorName[id]);
                info.push(CustomerUnreadCollection[id]);
                info.push(CustomerUnreadCollectionTime[id]);
                info.push(CustomerUnreadCollectionAddress[id]);
                info.push(CustomerUnreadCollectionContent[id]);
                break;
            case "booked":
                info.push(BookedCollectionId[id]);
                info.push(BookedCollectionVendorName[id]);
                info.push(BookedCollection[id]);
                info.push(BookedCollectionTime[id]);
                info.push(BookedCollectionAddress[id]);
                info.push(BookedCollectionContent[id]);
                break;
            case "vendor_declined":
                info.push(DeclinedCollectionId[id]);
                info.push(DeclinedCollectionVendorName[id]);
                info.push(DeclinedCollection[id]);
                info.push(DeclinedCollectionTime[id]);
                info.push(DeclinedCollectionAddress[id]);
                info.push(DeclinedCollectionContent[id]);
                break;
            case "vendor_finishd":
                info.push(FinishedCollectionId[id]);
                info.push(FinishedCollectionVendorName[id]);
                info.push(FinishedCollection[id]);
                info.push(FinishedCollectionTime[id]);
                info.push(FinishedCollectionAddress[id]);
                info.push(FinishedCollectionContent[id]);
                break;
            case "customer_cancelled":
                info.push(CancelledCollectionId[id]);
                info.push(CancelledCollectionVendorName[id]);
                info.push(CancelledCollection[id]);
                info.push(CancelledCollectionTime[id]);
                info.push(CancelledCollectionAddress[id]);
                info.push(CancelledCollectionContent[id]);
                break;
        }
        return info;
    }
    
    function checkExpired(time){
        var today = new Date();
        if(year > today.getFullYear() || (year == today.getFullYear() && month > today.getMonth() + 1) 
        || (year == today.getFullYear() && month == today.getMonth() + 1 && day > today.getDate()) 
        || (year == today.getFullYear() && month == today.getMonth() + 1 && day == today.getDate() && time > today.getHours())){
            return false;
        }else{
            return true;
        }
    }
    
    function getStatus(date, time){
        getCollectionInfo();
        for(var i = 0; i < VendorUnreadCollection.length; i++){
            if(VendorUnreadCollection[i] == date && VendorUnreadCollectionTime[i] == time){
                return "Vendor Unread";
            }
        }
        for(var i = 0; i < CustomerUnreadCollection.length; i++){
            if(CustomerUnreadCollection[i] == date && CustomerUnreadCollectionTime[i] == time){
                return "Unread";
            }
        }
        for(var i = 0; i < BookedCollection.length; i++){
            if(BookedCollection[i] == date && BookedCollectionTime[i] == time){
                return "Booked";
            }
        }
        for(var i = 0; i < DeclinedCollection.length; i++){
            if(DeclinedCollection[i] == date && DeclinedCollectionTime[i] == time){
                return "Vendor Declined";
            }
        }
        for(var i = 0; i < CancelledCollection.length; i++){
            if(CancelledCollection[i] == date && CancelledCollectionTime[i] == time){
                return "Cancelled";
            }
        }
        for(var i = 0; i < FinishedCollection.length; i++){
            if(FinishedCollection[i] == date && FinishedCollectionTime[i] == time){
                return "Finished";
            }
        }
        return "";
    }

    function createAppointmentDetailRow(time){
        getCollectionInfo();
        
        var date = day + "/" + month + "/" + year;
        var cellArray = [];
        for(var i = 0; i < VendorUnreadCollection.length; i++){
            if(VendorUnreadCollection[i] == date && VendorUnreadCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "vendor_unread";
                a.innerHTML = "Vendor Unread";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        for(var i = 0; i < CustomerUnreadCollection.length; i++){
            if(CustomerUnreadCollection[i] == date && CustomerUnreadCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "customer_unread";
                a.innerHTML = "Unread";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        for(var i = 0; i < BookedCollection.length; i++){
            if(BookedCollection[i] == date && BookedCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "booked";
                a.innerHTML = "Booked";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        for(var i = 0; i < DeclinedCollection.length; i++){
            if(DeclinedCollection[i] == date && DeclinedCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "vendor_declined";
                a.innerHTML = "Vendor Declined";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        for(var i = 0; i < CancelledCollection.length; i++){
            if(CancelledCollection[i] == date && CancelledCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "customer_cancelled";
                a.innerHTML = "Cancelled";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        for(var i = 0; i < FinishedCollection.length; i++){
            if(FinishedCollection[i] == date && FinishedCollectionTime[i] == time + ":00"){
                var a = document.createElement("A");
                a.className = "vendor_finished";
                a.innerHTML = "Vendor Finished";
                if(checkExpired(time)){
                    a.innerHTML += "(expired)";
                }
                a.id = i;
                a.style.cssText = "cursor: pointer;";
                cellArray.push(a);
            }
        }
        return cellArray;
    }

    function createAppiontmentArea(id, vendor_name, date, time, address, content, status){
        if(document.getElementById("info_area") !== null){
            var address_textarea = document.getElementById("appointment_address");
            address_textarea.hidden = true;
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area"));
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area_title"));
            document.getElementById("calendar_message").appendChild(address_textarea);
        }
        var customer_row = document.createElement("TR");
        var customer_row_cell1 = document.createElement("TD");
        var customer_row_cell2 = document.createElement("TD");
        var customer_row_cell2_content = document.createElement("INPUT");
        customer_row_cell1.className = "message_title";
        customer_row_cell2_content.id = "appointment_id";
        customer_row_cell2_content.name = "appointment_id";
        customer_row_cell1.innerHTML = "Appointment ID: ";
        customer_row_cell2_content.readOnly = true;
        customer_row_cell2_content.value = id;
        customer_row_cell2.appendChild(customer_row_cell2_content);
        customer_row.appendChild(customer_row_cell1);
        customer_row.appendChild(customer_row_cell2);
        
        var vendor_row = document.createElement("TR");
        var vendor_row_cell1 = document.createElement("TD");
        var vendor_row_cell2 = document.createElement("TD");
        var vendor_row_cell2_content = document.createElement("INPUT");
        vendor_row_cell1.className = "message_title";
        vendor_row_cell2_content.id = "appointment_vendor";
        vendor_row_cell2_content.name = "appointment_vendor";
        vendor_row_cell1.innerHTML = "Vendor: ";
        vendor_row_cell2_content.readOnly = true;
        vendor_row_cell2_content.value = vendor_name;
        vendor_row_cell2.appendChild(vendor_row_cell2_content);
        vendor_row.appendChild(vendor_row_cell1);
        vendor_row.appendChild(vendor_row_cell2);
        
        var date_row = document.createElement("TR");
        var date_row_cell1 = document.createElement("TD");
        var date_row_cell2 = document.createElement("TD");
        var date_row_cell2_content = document.createElement("INPUT");
        date_row_cell1.className = "message_title";
        date_row_cell2_content.id = "appointment_date";
        date_row_cell2_content.name = "appointment_date";
        date_row_cell1.innerHTML = "Date: ";
        //date_row_cell2_content.readOnly = true;
        date_row_cell2_content.value = date;
        date_row_cell2.appendChild(date_row_cell2_content);
        date_row.appendChild(date_row_cell1);
        date_row.appendChild(date_row_cell2);
        
        var time_row = document.createElement("TR");
        var time_row_cell1 = document.createElement("TD");
        var time_row_cell2 = document.createElement("TD");
        var time_content = document.createElement("INPUT");
        time_row_cell1.className = "message_title";
        time_content.id = "appointment_time";
        time_content.name = "appointment_time";
        time_row_cell1.innerHTML = "Time: ";
        //var time_content_1 = createTimeList(time);
        //time_content.appendChild(time_content_1);
        //time_content.readOnly = true;
        time_content.value = time;
        time_row_cell2.appendChild(time_content);
        time_row.appendChild(time_row_cell1);
        time_row.appendChild(time_row_cell2);
        
        var address_row = document.createElement("TR");
        var address_row_cell1 = document.createElement("TD");
        var address_row_cell2 = document.createElement("TD");
        address_row_cell1.className = "message_title";
        address_row_cell1.innerHTML = "Address: ";
        address_row_cell1.style.cssText = "width:100px;";
        //var address_textarea = document.createElement("input");
        //address_textarea.id = "appointment_address";
        var address_textarea = document.getElementById("appointment_address");
        address_textarea.hidden = false;
        address_textarea.name = "appointment_address";
        address_textarea.style.cssText = "width:600px;";
        address_textarea.value = address;
        address_row_cell2.appendChild(address_textarea);
        address_row.appendChild(address_row_cell1);
        address_row.appendChild(address_row_cell2);
        
        var info_row = document.createElement("TR");
        var text_area = document.createElement("textarea");
        text_area.id = "appointment_content";
        text_area.name = "appointment_content";
        text_area.style.cssText = "width:900px; height:100px;";
        text_area.readOnly = true;
        text_area.value = content;
        info_row.appendChild(text_area);
        
                
        var button_row = document.createElement("TR");
        var edit_button = document.createElement("INPUT");
        var cancel_button = document.createElement("INPUT");
        var reply_button = document.createElement("INPUT");
        var close_button = document.createElement("INPUT");
        var finish_button = document.createElement("INPUT");
        
        edit_button.id = "appointment_add";
        edit_button.type = "submit";
        edit_button.name = "appointment_edit";
        edit_button.value = "Edit";
        cancel_button.type = "submit";
        cancel_button.value = "Cancel";
        cancel_button.name = "appointment_cancel";
        reply_button.type = "button";
        reply_button.value = "Reply";
        close_button.value = "Close";
        close_button.type = "button";
        finish_button.value = "Finish";
        finish_button.type = "submit";
        finish_button.name = "appointment_finish";
        
        reply_button.onclick = function(){
            createReplyArea();
        };
        close_button.onclick = function(){
            var address_textarea = document.getElementById("appointment_address");
            address_textarea.hidden = true;
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area"));
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area_title"));
            document.getElementById("calendar_message").appendChild(address_textarea);
        };
        switch(status){
            case "vendor_unread":
            case "customer_unread":
                button_row.appendChild(edit_button);
                button_row.appendChild(reply_button);
                button_row.appendChild(cancel_button);
                break;
            case "booked":
                button_row.appendChild(finish_button);
                break;
            case "vendor_declined":
            case "customer_cancelled":
            case "vendor_finished":
                break;
        }
        button_row.appendChild(close_button);
        
        var table = document.createElement("TABLE");
        table.id = "info_area_title";
        table.appendChild(customer_row);
        table.appendChild(vendor_row);
        table.appendChild(date_row);
        table.appendChild(time_row);
        table.appendChild(address_row);
        var table1 = document.createElement("TABLE");
        table1.id = "info_area";
        table1.appendChild(info_row);
        table1.appendChild(button_row);
        document.getElementById("calendar_message").append(table);
        document.getElementById("calendar_message").append(table1);
    }
    
    function createTimeList(id){
        var timeList = document.createElement("select");
        timeList.name = "appointment_time";
        for(var i = 8; i <= 20; i++){
            var e = document.createElement("option");
            e.value = i + ":00";
            e.innerHTML = i + ":00";
            if(i + ":00" == id){
                e.selected = true;
            }
            timeList.appendChild(e);
        }
        return timeList;
    }
    
    function createReplyArea(){
        document.getElementById("calendar_message").removeChild(document.getElementById("info_area"));
        setEditable(true);
        var table = document.createElement("table");
        table.id = "info_area";
        var table_title = document.createElement("TR");
        table_title.innerHTML = "New Message";
        var table_title_message = document.createElement("TR");
        var message_content = document.createElement("textarea");
        message_content.name = "new_appointment_message";
        message_content.id = "new_appointment_message";
        message_content.style.cssText = "width:900px;height:150px;";
        table_title_message.appendChild(message_content);
        
        var button_row = document.createElement("TR");
        var send_button = document.createElement("INPUT");
        var close_button = document.createElement("INPUT");
        send_button.name = "appointment_send";
        send_button.type = "submit";
        send_button.value = "Send";
        close_button.value = "Close";
        close_button.type = "button";
        close_button.onclick = function(){
            var address_input = document.getElementById("appointment_address");
            address_input.hidden = true;
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area"));
            document.getElementById("calendar_message").removeChild(document.getElementById("info_area_title"));
            document.getElementById("calendar_message").appendChild(address_input);
        };
        button_row.appendChild(send_button);
        button_row.appendChild(close_button);
        
        table.appendChild(table_title);
        table.appendChild(table_title_message);
        table.appendChild(button_row);
        
        document.getElementById("calendar_message").append(table);
    }
    
    function createCalendar(){
        getCurrentDay();
        createDayDetail();
        var table = document.createElement("TABLE");
        table.className = "calendar_table";
        table.appendChild(createYearRow(year));
        var table_month = document.createElement("TABLE");
        table_month.className = "calendar_table";
        table_month.appendChild(createMonthRow(month));
        var table_day = document.createElement("TABLE");
        table_day.className = "calendar_table";
        table_day.appendChild(createDayTitle());

        document.getElementById("calendar").append(table);
        document.getElementById("calendar").append(table_month);
        document.getElementById("calendar").append(table_day);
        document.getElementById("calendar").append(createDays(getMonthDays(month)));
        setBackgroundColor();

    }

    function resetCalendar(){
        document.getElementById("calendar").innerHTML = "";
        document.getElementById("day_detail").innerHTML = "";
        createDayDetail();
        var table = document.createElement("TABLE");
        table.className = "calendar_table";
        table.appendChild(createYearRow(year));
        var table_month = document.createElement("TABLE");
        table_month.className = "calendar_table";
        table_month.appendChild(createMonthRow(month));
        var table_day = document.createElement("TABLE");
        table_day.className = "calendar_table";
        table_day.appendChild(createDayTitle());

        document.getElementById("calendar").append(table);
        document.getElementById("calendar").append(table_month);
        document.getElementById("calendar").append(table_day);
        document.getElementById("calendar").append(createDays(getMonthDays(month)));
        setBackgroundColor();
        
    }
    
    function validate(){
        if(document.getElementById("appointment_content") != null){
            return editValidate();
        }else{
            return replyValidate();
        }
    }
    
    function replyValidate(){
        var replyMessage = document.getElementById("new_appointment_message");
        if(replyMessage.value != ""){
            return true;
        }else{
            setMessage(false, "Error! Message must not left as empty!");
            return false;
        }
    }
    
    function editValidate(){
        var appointmentDate = document.getElementById("appointment_date");
        var appointmentTime = document.getElementById("appointment_time");
        var appointmentAddress = document.getElementById("appointment_address");
        var message = "";
        if(appointmentDate.value == ""){
            message += "Error! Date field must not left as empty! ";
        }else if(dateValidate(appointmentDate.value)){
            message += "Error! Date is not validate! Validated example: DD/MM/YYYY";
        }
        if(appointmentTime.value == ""){
            message += "Error! Time field must not left as empty! ";
        }else if(timeValidate(appointmentTime.value)){
            message += "Error! Time is not validate! Validated example: XX:00";
        }
        if(appointmentAddress.value == ""){
            message += "Error! Address field must not left as empty! ";
        }else if(doGeocode()){
            message += "Error! The input address does not existed! ";
        }
        if(message == ""){
            return true;
        }else{
            setMessage(false, message);
            return false;
        }
    }
    
    function setMessage(type, message){
        var messageArea = document.getElementById("schedule-message-content");
        document.getElementById("schedule-message").className += "show";
        messageArea.className = messageArea.className.replace(" success", "");
        messageArea.className = messageArea.className.replace(" error", "");
        if(type){
            if(messageArea.className.indexOf(" success") == -1){
                messageArea.className += " success";
            }
            messageArea.innerHTML = message;
        }else{
            if(messageArea.className.indexOf(" error") == -1){
                messageArea.className += " error";
            }
            messageArea.innerHTML = message;
        }
    }
    
    function dateValidate(s){
        var bits = s.split('/');
        var d = new Date(bits[2], bits[1], bits[0]);
        return d && (d.getMonth() + 1) == bits[1];
    }
    
    function timeValidate(t){
        var ts = t.split(":");
        return t.length == 2 && parseInt(t[0]) >= 8 && parseInt(t[0]) <= 20 && parseInt(t[1]) == 0;
    }
    
    function doGeocode() {
        var addr = document.getElementById("appointment_address");
        // Get geocoder instance
        var geocoder = new google.maps.Geocoder();

        // Geocode the address
        geocoder.geocode({
          'address': addr.value
        }, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK && results.length > 0) {
            // set it to the correct, formatted address if it's valid
            addr.value = results[0].formatted_address;
            return true;
            // show an error if it's not
          }else{
              return false;
          }
        });
      }
      
    
    function closeMessage(){
        var messageArea = document.getElementById("schedule-message-content");
        document.getElementById("schedule-message").className = "";
        if(messageArea.className.indexOf(" success") != -1){
            messageArea.className = messageArea.className.replace(" success", "");
        }
        if(messageArea.className.indexOf(" error") != -1){
            messageArea.className = messageArea.className.replace(" error", "");
        }
    }
    
    function setEditable(editable){
        document.getElementById("appointment_address").readOnly = editable;
        document.getElementById("appointment_date").readOnly = editable;
        document.getElementById("appointment_time").readOnly = editable;
    }
    
    function setupMessage(){
        var message = "<?php echo $schedule_message;?>";
        if(message != ""){
            setMessage(true, message);
        }
    }
    
        createCalendar();
        setupMessage();
        </script>
        <script>
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };
    function initAutocomplete(){
        //var input = document.getElementById('street_1');
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('appointment_address')),
            {types: ['geocode']});
        autocomplete.addListener('place_changed', fillInAddress);
        autocomplete.setComponentRestrictions({'country': ['nz', 'au']});
    }
    
    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        /*for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }*/
        
        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            switch(addressType){
                case "postal_code":  
                    document.getElementById("zip").value = val;
                    break;
                case "administrative_area_level_1":
                    document.getElementById("region").value = val;
                    break;
                case "locality":
                    document.getElementById("city").value = val;
                    break;
            }
          }
        }
      }
      
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
</script>
    
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAo4noW3hBUU9r9f1sF2_NZ5KB9tUwNiIQ&libraries=places&callback=initAutocomplete"
        async defer></script>
    </div>
    </form>
</div>